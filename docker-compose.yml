version: '3.4'
services:
  ######################################################################################################################
  # REVERSE PROXY - TRAEFIK
  ######################################################################################################################
  reverse-proxy:
    image: ${TRAEFIK_IMAGE}
    command: '--docker --docker.domain=${CHAMELEON_HOST}'
    container_name: reverse-proxy
    ports:
    - '${CHAMELEON_HTTP_PORT}:80'
    - '${CHAMELEON_HTTPS_PORT}:443'
    - '${CHAMELEON_WAMP_PORT}:9001'
    volumes:
    - '/var/run/docker.sock:/var/run/docker.sock'
    - './traefik.toml:/traefik.toml'
    - './certs:/etc/traefik/certs'
    restart: always
    networks:
    - net
#    labels:
#    - traefik.backend=reverse-proxy
#    - 'traefik.frontend.rule=Host:${CHAMELEON_HOST};PathPrefixStrip:/traefik'
#    - traefik.port=8080
    depends_on:
    - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: '${FLUENTD_IPV4}:24224'
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: chameleon.{{.Name}}

  ######################################################################################################################
  # LOGGING - FLUENTD
  ######################################################################################################################
  fluentd:
    image: ${FLUENTD_IMAGE}
    container_name: fluentd
    volumes:
    - './logs:/fluentd/log'
    restart: always
    environment:
      - LOGGING_MAIL_SERVER
      - LOGGING_MAIL_USER
      - LOGGING_MAIL_PASSWORD
      - LOGGING_MAIL_RECIPIENT
    networks:
      net:
        ipv4_address: ${FLUENTD_IPV4}

  ######################################################################################################################
  # WEB SERVER - NODE
  ######################################################################################################################
  web-server:
    image: ${WEB_SERVER_IMAGE}
    container_name: web-server
    volumes:
    - './logs:/opt/web-server/logs'
    - './www:/opt/web-server/www'
    labels:
    - traefik.enable=true
    - traefik.backend=web-server
    - 'traefik.frontend.rule=Host:${CHAMELEON_HOST}'
    - traefik.port=3000
    - traefik.docker.network=chameleon_net
    networks:
    - net
    environment:
    - AUTH_TOKEN_SECRET
    - AUTH_COOKIE_NAME
    - AUTH_COOKIE_HTTPS_ONLY
    - AUTH_AD_HOST
    - AUTH_AD_SSL
    - AUTH_AD_BASE_DN
    - NODE_ENV
    - LOGGER_LEVEL
    - FLUENTD_IPV4
    - AUTH_DEBUG_PASSWORD
    restart: always
    depends_on:
    - fluentd

  ######################################################################################################################
  # REST API - NODE
  ######################################################################################################################
  rest-api:
    image: ${REST_API_IMAGE}
    container_name: rest-api
    volumes:
    - './logs:/opt/rest-api/logs'
    labels:
    - traefik.enable=true
    - traefik.backend=rest-api
    - 'traefik.frontend.rule=Host:${CHAMELEON_HOST};PathPrefix:/api'
    - traefik.port=3000
    - traefik.docker.network=chameleon_net
    networks:
      net:
        ipv4_address: ${REST_API_IPV4}
    environment:
    - MONGO_DB_HOST
    - MONGO_DB_PORT
    - MONGO_DB_DATABASE
    - MONGO_DB_USER
    - MONGO_DB_PASSWORD
    - AUTH_TOKEN_SECRET
    - AUTH_COOKIE_NAME
    - NODE_ENV
    - LOGGER_LEVEL
    - FLUENTD_IPV4
    restart: always
    depends_on:
    - fluentd

networks:
  net:
    driver: bridge
    ipam:
      config:
      - subnet: ${CHAMELEON_SUBNET}
