version: '3.4'
services:
  reverse-proxy:
    image: 'traefik:1.7.4-alpine'
    command: '--docker --docker.domain=${CHAMELEON_HOST}'
    container_name: reverse-proxy
    ports:
      - '80:80'
      - '443:443'
      - '9001:9001'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './traefik.toml:/traefik.toml'
      - './certs:/etc/traefik/certs'
    restart: always
    networks:
      - traefik_default
    labels:
      - traefik.backend=reverse-proxy
      - 'traefik.frontend.rule=Host:${CHAMELEON_HOST};PathPrefixStrip:/traefik'
      - traefik.port=8080

  web-server:
    image: 'chameleon/web-server:latest'
    container_name: web-server
    volumes:
      - './logs:/opt/web-server/logs'
      - './www:/opt/web-server/www'
    labels:
      - traefik.enable=true
      - traefik.backend=web-server
      - 'traefik.frontend.rule=Host:${CHAMELEON_HOST}'
      - traefik.port=3000
      - traefik.docker.network=traefik_default
    networks:
      - traefik_default
    environment:
      - AUTH_TOKEN_SECRET
      - AUTH_COOKIE_NAME
      - AUTH_AD_HOST
      - AUTH_AD_SSL
      - AUTH_AD_BASE_DN
    restart: always

  rest-api:
    image: 'chameleon/rest-api:latest'
    container_name: rest-api
    volumes:
      - './logs:/opt/rest-api/logs'
    labels:
      - traefik.enable=true
      - traefik.backend=rest-api
      - 'traefik.frontend.rule=Host:${CHAMELEON_HOST};PathPrefix:/api'
      - traefik.port=3000
      - traefik.docker.network=traefik_default
    networks:
      - traefik_default
    environment:
      - MONGO_DB_HOST
      - MONGO_DB_PORT
      - MONGO_DB_DATABASE
      - MONGO_DB_USER
      - MONGO_DB_PASSWORD
      - AUTH_TOKEN_SECRET
      - AUTH_COOKIE_NAME
    restart: always

networks:
  traefik_default:
    external:
      name: traefik_default
